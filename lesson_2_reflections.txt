What happens when you initialize a repository? Why do you need to do it?

it starts a .git directory that saves all the versions and the commits. it helps us track all the changes we have which could be helpful in debugging

How is the staging area different from the working directory and the repository?
What value do you think it offers?

Staging area is a temporary solution for the commits that a user would like to start after before actually committing. Working directory however is whatever that is inside the repositroy and includes changed and unchanged files.

How can you use the staging area to make sure you have one commit per logical change?

adding experimental features to the code or another langauge are examples of using branches.

By checking git status we can make sure that we only ave one commit for each logical change that might affect the code in anyway.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

adding new features, lagnauges, bug fixes on the side and ets

How do the diagrams help you visualize the branch structure?

It helps to see the scale of changes and accessibla and unacessible branches too.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

having all the commits before them into one branch and organize them in chronological order. 

What are the pros and cons of Git's automatic merging vs. always doing merges manually?