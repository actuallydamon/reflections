How did viewing a diff between two versions of a file help you see the bug that was introduced?

    It should the line number and also the change that happened in the file

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

    HAving version control helps to have better visualization on the files and changes that occured during the time. In case of new changes, one can easily find human errors such as typos with version control.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?

    Pros:
    1. you can ommit some small unralted changes

    cons:
    1. you might actually forgot to add commit which could be difficult to have later on.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

   Files might be realted to each other which git allows saving changes to all of them while googledocs and dropbox are normally used to documents which could behave independetly

How can you use the commands git log and git diff to view the history of files?

    git log shows you every single commit with their unique identifier while git diff can compare two different gits.

How might using version control make you more confident to make changes that?
 
    Since there's always a way to go back, it can be always tempting to try out stuff that might introduce bugs to code

Now that you have your workspace set up, what do you want to try using Git for?

	I am trying to learn programming as I am very new to this concept. Hopefully I'll find a job soon :D